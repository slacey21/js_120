In the last question, we used a mix-in named Speed that contained a
goFast method. We included the mix-in in the Car class and then called
the goFast method from an instance of the Car class. You may have 
noticed that the string printed when we call goFast includes the
name of the type of vehicle we are using. How is that done?

The "goFast" method is defined as:
  goFast() {
    console.log(`I'm a ${this.constructor.name} and going super fast!`);
  }
To create a mix-in, we assigned the Car.prototype and Truck.prototype objects to 
be the Speed object that has the goFast method defined on it. Once this happened, 
any instances of Car or Truck delegated any non-own properties to their prototype
where available. So when we called "blueTruck.goFast()", the execution context for the 
goFast method was bound to the blueTruck object, so "this" referred to blueTruck, and 
blueTruck.contructor.name was the Truck constructor function name.